Práctica 5 - Sesión SIP
Protocolos para la Transmisión de Audio y Vı́deo en Internet
Versión 9.0 - 6.11.2018

Ejercicios

Creación de repositorio para la práctica

1. Con el navegador, dirı́gete al repositorio ptavi-p5 en la cuenta del
profesor en GitHub1 y realiza un fork, de manera que consigas tener
una copia del repositorio en tu cuenta de GitHub. Clona el repositorio
que acabas de crear a local para poder editar los archivos. Trabaja a
partir de ahora en ese repositorio, sincronizando los cambios que vayas
realizando.

Como tarde al final de la práctica, deberás realizar un push para subir
tus cambios a tu repositorio en GitHub. En esta práctica, al contrario
que con las demás, se recomienda hacer frecuentes commits, pero el
push al final.

Análisis de una sesión SIP

Se ha capturado una sesión SIP con Ekiga (archivo sip.cap.gz), que
se puede abrir con Wireshark2 . Se pide rellenar las cuestiones que se
plantean en este guión en el fichero p5.txt que encontrarás también
en el repositorio.

2. Observa que las tramas capturadas corresponden a una sesión SIP
con Ekiga, un cliente de VoIP para GNOME. Responde a las siguientes
cuestiones:
* ¿Cuántos paquetes componen la captura?
	954
* ¿Cuánto tiempo dura la captura?
	56.149345
* ¿Qué IP tiene la máquina donde se ha efectuado la captura? ¿Se
trata de una IP pública o de una IP privada? ¿Por qué lo sabes?
	La maquina donde se efectua la captura tiene la IP:192.168.1.34.
	IP privada, de Clase C cuyo  rango es 192.168.0.0 - 192.168.255.255.

3. Antes de analizar las tramas, mira las estadı́sticas generales que aparecen en el menú de Statistics.
En el apartado de jerarquı́a de protocolos (Protocol Hierarchy) se puede ver el porcentaje del tráfico
correspondiente al protocolo TCP y UDP.
* ¿Cuál de los dos es mayor? ¿Tiene esto sentido si estamos hablando
de una aplicación que transmite en tiempo real?
	Es mayor UDP(96.23%). Si ,en la mayoría de los casos RTSP usa TCP para datos de control del
	reproductor y UDP para los datos de audio y vídeo aunque también 
	puede usar TCP en caso de que sea necesario.
* ¿Qué otros protocolos podemos ver en la jerarquı́a de protocolos?
¿Cuales crees que son señal y cuales ruido?
	DNS,HTTP,CLASSIC-STUN,SIP,SDP,H.261,RTP,ARP,ICMP.
	Señal serian SIP y RTP y el resto ruido.
	
4. Observa por encima el flujo de tramas en el menú de Statistics en IO
Graphs. La captura que estamos viendo incluye desde la inicialización
(registro) de la aplicación hasta su finalización, con una llamada entremedias.
* Filtra por sip para conocer cuándo se envı́an paquetes SIP. ¿En
qué segundos tienen lugar esos envı́os?
	En el segundo 7(registro) , del 14 al 17(llamada que se repite) , del 38 al 40(BYE) y en el segundo 55
	
* Y los paquetes con RTP, ¿cuándo se envı́an?
	Del segundo 17 al 38

[Al terminar el ejercicio es recomendable hacer commit de los ficheros modificados]

5. Analiza las dos primeras tramas de la captura.
* ¿Qué servicio es el utilizado en estas tramas?
	DNS
* ¿Cuál es la dirección IP del servidor de nombres del ordenador
que ha lanzado Ekiga?
	80.58.61.250
* ¿Qué dirección IP (de ekiga.net) devuelve el servicio de nombres?
	86.64.162.35

6. A continuación, hay más de una docena de tramas TCP/HTTP.
* ¿Podrı́as decir la URL que se está pidiendo?
	En el paquete 8, en la peticion GET encontramos la URL: http://ekiga.net/ip/

* ¿Qué user agent (UA) la está pidiendo?
	Ekiga.

* ¿Qué devuelve el servidor?
	200 OK.

* Si lanzamos el navegador web, por ejemplo, Mozilla Firefox, y
vamos a la misma URL, ¿qué recibimos? ¿Qué es, entonces, lo
que está respondiendo el servidor?
	Recibimos una direccion IP, en concreto el servidor responde con la direccion IP publica de nuestro equipo.

7. Hasta la trama 45 se puede observar una secuencia de tramas del protocolo STUN.
* ¿Por qué se hace uso de este protocolo?
	Porque STUN es es un protocolo de red del tipo cliente/servidor que permite a clientes NAT encontrar su dirección IP pública,
	el tipo de NAT en el que se encuentra y el puerto de Internet asociado con el puerto local a través de NAT.
	Esta información es usada para configurar una comunicación UDP entre dos hosts que se encuentren tras enrutadores NAT. 

* ¿Podrı́as decir si estamos tras un NAT o no?
	Si, estamos tras NAT ya que utilizamos el protocolo STUN.

8. La trama 46 es la primera trama SIP. En un entorno como el de Internet, lo habitual es desconocer la dirección IP de la otra parte al
realizar una llamada. Por eso, todo usuario registra su localización en un servidor Registrar. El Registrar guarda información sobre los
usuarios en un servidor de localización que puede ser utilizado para localizar usuarios.
* ¿Qué dirección IP tiene el servidor Registrar?
	ekiga.net => 86.64.162.35

* ¿A qué puerto (del servidor Registrar) se envı́an los paquetes SIP?
	5060.

* ¿Qué método SIP utiliza el UA para registrarse?
	REGISTER.

* Además de REGISTER, ¿podrı́as decir qué instrucciones SIP entiende el UA?
	Allow: INVITE,ACK,OPTIONS,BYE,CANCEL,NOTIFY,REFER,MESSAGE

[Al terminar el ejercicio es recomendable hacer commit de los ficheros modificados]

9. Fijémonos en las tramas siguientes a la número 46:
* ¿Se registra con éxito en el primer intento?
	No, pide autorizacion.

* ¿Cómo sabemos si el registro se ha realizado correctamente o no?
	Sabemos  que no se ha realizado correctamente porque nos llega un 401 Unauthorized
	
* ¿Podrı́as identificar las diferencias entre el primer intento y el segundo de registro? (fı́jate en el tamaño de los paquetes y mira
a qué se debe el cambio)
	En el primer REGISTER (paquete 46) tenemos un frame lenght = 523 bytes y en el segundo Register (paquete 51) de un frame lenght = 712 bytes.
	Podemos ver que este segundo REGISTER es mayor ya que incluye la autorizacion necesaria para el registro.

* ¿Cuánto es el valor del tiempo de expiración de la sesión? Indica
las unidades.
	Expires = 3600 segundos

10. Una vez registrados, podemos efectuar una llamada. Vamos a probar con el servicio de eco de Ekiga que nos permite comprobar
si nos hemos conectado correctamente. El servicio de eco tiene la dirección sip:500@ekiga.net. Veamos el INVITE de cerca.
* ¿Puede verse el nombre del que efectúa la llamada, ası́ como su
dirección SIP?
	Si , podemos ver tanto el nombre como al direccion SIP:
	From: "Gregorio Robles"(nombre) <sip:grex@ekiga.net>(direccion sip)
	
* ¿Qué es lo que contiene el cuerpo de la trama? ¿En qué formato/protocolo está?
	El cuerpo de la trama (Message Body) tiene los parametros de inicializacion en formato SDP.

* ¿Tiene éxito el primer intento? ¿Cómo lo sabes?
	No, ya que no se recibe un 200 Ok.
	REcibe el error 407 Proxy Authentication Required.
	
* ¿En qué se diferencia el segundo INVITE más abajo del primero?
¿A qué crees que se debe esto?
	La diferemcia viene en el campo Proxy-Authorization, en el que en el
	segundo INVITE incluye la autorizacion necesaria:
	
	Proxy-Authorization: Digest username="grex", realm="ekiga.net",
	nonce="45a439f6ba5f681cd945fb7c40529fd1e0f28a81", uri="sip:500@ekiga.net",
	algorithm=md5, response="9a5627c14a8a433bd308d2ec54777240"

11. Una vez conectado, estudia el intercambio de tramas.
* ¿Qué protocolo(s) se utiliza(n)? ¿Para qué sirven estos protocolos?
	RTCP y RTP.
	
	RTCP : Es un protocolo de comunicación que proporciona información de
	control que está asociado con un flujo de datos para una aplicación
	multimedia (flujo RTP). 
	
	RTP : Es un protocolo de nivel de aplicación utilizado para la transmisión de información en tiempo real, como por ejemplo audio y vídeo en una
	videoconferencia.

* ¿Cuál es el tamaño de paquete de los mismos?
	RTCP son 102 bytes y RTP 214 bytes.
	
* ¿Se utilizan bits de padding?
	No, ya que este campo aparece como False.
	..0. .... = Padding: False
	 
* ¿Cuál es la periodicidad de los paquetes (en origen; nota que la
captura es en destino)?
	La periodicidad en paquetes RTP es de 0.02 segundos.
	
* ¿Cuántos bits/segundo se envı́an?
	
	180-20 = 160 bytes
	160/0.02 sg = 8000 bytes/sg => 64Kbps

[Al terminar el ejercicio es recomendable hacer commit de los ficheros modificados]

12. Vamos a ver más a fondo el intercambio RTP. En Telephony hay una
opción RTP. Empecemos mirando los flujos RTP.
* ¿Cuántos flujos hay? ¿por qué?
	Hay 2 flujos (1 audio, 1 video)

* ¿Cuántos paquetes se pierden?
	Ningun paquete se pierde.

* ¿Cuál es el valor máximo del delta? ¿Y qué es lo que significa el
valor de delta?
	Flujo1: Max Delta 1290.44 ms @ 297

	Flujo2: Max Delta 1290.48 ms @ 300

	El Delta se refiere al retardo que sufre el paquete, desde que sale hasta que llega al destinatario.

* ¿Cuáles son los valores de jitter (medio y máximo)? ¿Qué
quiere decir eso? ¿Crees que estamos ante una conversación de
calidad?

	Flujo1: Max Jitter => 119.64 ms , Mean Jitter => 42.50 ms

	Flujo2: Max Jitter => 183.10 ms , Mean Jitter => 153.24 ms

	Se denomina jitter o fluctuación del retardo1​2​3​ a la variabilidad temporal durante el envío de señales digitales, una ligera desviación de la
	exactitud de la señal de reloj.
	
	Con 500ms podemos decir que tendriamos buena calidad, con los valores que
	tenemos estariamos dentro de este limite.
	 
13. Elige un paquete RTP de audio. Analiza el flujo de audio en Telephony
-> RTP -> Stream Analysis.
* ¿Cuánto valen el delta y el jitter para el primer paquete que
ha llegado?
	En este caso la Delta vale 0 y el jitter tambien tiene valor 0.

* ¿Podemos saber si éste es el primer paquete que nos han enviado?
	Si, al observar el numero de Sequence vemos que es el primero.

* Los valores de jitter son menores de 10ms hasta un paquete
dado. ¿Cuál?
	Hasta el paquete 246, despues el jitter del 247 vale 38.82
	
* ¿A qué se debe el cambio tan brusco del jitter?
	Se debe a que la delta tiene un gran aumento de 24.03 a 554.74 ms.

* ¿Es comparable el cambio en el valor de jitter con el del delta?
¿Cual es más grande?
	Si, ya que aumenta el delta y el jitter respecto al paquete anterior.

14. En Telephony selecciona el menú VoIP calls. Verás que se lista la
llamada de voz IP capturada en una ventana emergente. Selecciona
esa llamada y pulsa el botón Graph.
* ¿Cuánto dura la conversación?

	84	14.426793	192.168.1.34	ekiga.net	SIP/SDP	982	Request: INVITE sip:500@ekiga.net | 
	941	39.229683	ekiga.net	192.168.1.34	SIP	581	Status: 200 OK | 

	39.229683 - 14.426793 = 24.80289 sg dura la conversacion.

* ¿Cuáles son sus SSRC? ¿Por qué hay varios SSRCs? ¿Hay CSRCs?
	
	Payload type: ITU-T H.261 (video) => Synchronization Source identifier: 0x43306582 (1127245186)
	Payload type: ITU-T G.711 PCMA (audio) => Synchronization Source identifier: 0xbf4afd37 (3209362743)
	Hay varios SSRC ya que tenemos un flujo de video y otro de audio.
	No hay CSRs, porque el campo Contributing Source Identifiers Count = 0.

15. Identifica la trama donde se finaliza la conversación.
* ¿Qué método SIP se utiliza?
	BYE

* ¿En qué trama(s)?
	En las tramas 924,925,927 y 933.

* ¿Por qué crees que se envı́a varias veces?
	Para saber que llega seguro, ya que usamos UDP y no es fiable.

16. Finalmente, se cierra la aplicación de VozIP.
* ¿Por qué aparece una instrucción SIP del tipo REGISTER?
	Porque enviamos Expires = 0.

* ¿En qué trama sucede esto?
	En 950.

* ¿En qué se diferencia con la instrucción que se utilizó con anterioridad (al principio de la sesión)?
	En el principio de la sesion EXPIRES=3600 y al finalizar EXPIRES=0.

[Al terminar el ejercicio es recomendable hacer commit de los ficheros modificados]

Captura de una sesión SIP

17. Dirı́gete a la web IPTel con el navegador y créate
una cuenta SIP.Recibiras un correo electronico de confirmacion en la direccion que has
indicado al registrarte.

18. Lanza Ekiga, y configúralo con los datos de la cuenta
que te acabas de crear. Comprueba que estás conectado (En la barra
al final de la ventana podrás ver “Connected”). Al terminar, cierra
completamente Ekiga.

19. Captura una sesión SIP de una conversación con el número SIP sip:music@sip.iptel.org.
Recuerda que has de comenzar a capturar tramas antes de arrancar
Ekiga para ver todo el proceso4 .

20. Observa las diferencias en el inicio de la conversación entre el entorno
del laboratorio y el del ejercicio anterior5 :
* ¿Se utilizan DNS y STUN? ¿Por qué?
	No,porque STUN es es un protocolo de red del tipo cliente/servidor que permite a clientes NAT encontrar su dirección IP pública.

* ¿Son diferentes el registro y la descripción de la sesión?
	Si, en el ejercicio anterior al enviar el register nos da errro porque no esta registrado, y vuelve a mandar otro register con
	la contraseña para registrarse correctamente.En este caso ya estamos registrados y con el primer register entramos directamente.

21. Identifica las diferencias existentes entre esta conversación y la conversación anterior:
* ¿Cuántos flujos tenemos?
	En este caso tenemos 2 flujos de audio.

* ¿Cuál es su periodicidad?
	20 ms.

* ¿Cuánto es el valor máximo del delta y los valores medios y
máximo del jitter?

	flujo1 : SSRC => 0x0b835d2e , Max Delta => 24.19 ms ,Max Jitter => 1.10 ms , Mean Jitter => 0.63 ms

	flujo2 : SSRC => 0xae82d564 , Max Delta => 39.27 ms ,Max Jitter => 15.26 ms ,Mean Jitter => 12.50 ms

* ¿Podrı́as reproducir la conversación desde Wireshark? ¿Cómo?
Comprueba que poniendo un valor demasiado pequeño para el buffer de jitter, la conversación puede no tener la calidad necesaria.
	Si, en la pestaña Telephony entramos en VOIP Calls y dentro seleccionamos la llamada y le damos a Play Streams.

* ¿Sabrı́as decir qué tipo de servicio ofrece sip:music@iptel.org?
	Servicio de reproduccion de musica.

[Al terminar el ejercicio es recomendable hacer commit de los ficheros modificados]


21. Filtra por los paquetes SIP de la captura y guarda únicamente los
paquetes SIP como p5.pcapng. Abre el fichero guardado para cerciorarte de que lo has hecho bien. Deberás añadirlo al repositorio.
[Al terminar el ejercicio es recomendable hacer commit de los ficheros modificados]
[Al terminar la práctica, realiza un push para sincronizar tu repositorio GitHub]

